{"mappings":"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","sources":["<anon>","node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/adapters/downloader.js","node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/util.js","node_modules/.pnpm/@parcel+runtime-js@2.13.3_@parcel+core@2.13.3_@swc+helpers@0.5.15_/node_modules/@parcel/runtime-js/lib/runtime-9e2e5875ea96df10.js","node_modules/.pnpm/@parcel+runtime-js@2.13.3_@parcel+core@2.13.3_@swc+helpers@0.5.15_/node_modules/@parcel/runtime-js/lib/runtime-9ae4414419585160.js","node_modules/.pnpm/@parcel+runtime-js@2.13.3_@parcel+core@2.13.3_@swc+helpers@0.5.15_/node_modules/@parcel/runtime-js/lib/runtime-bd61ba8e0bf97e5a.js","node_modules/.pnpm/@parcel+runtime-js@2.13.3_@parcel+core@2.13.3_@swc+helpers@0.5.15_/node_modules/@parcel/runtime-js/lib/runtime-dc3d9956227d72e1.js","node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/config.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"c2cXb\", function(module, exports) {\n\n$parcel$export(module.exports, \"FileHandle\", () => $8c2fb8443087240a$export$8bdd21c705ef8d22);\n\nvar $jG9Jm = parcelRequire(\"jG9Jm\");\n\nvar $f9c8S = parcelRequire(\"f9c8S\");\nconst { WritableStream: $8c2fb8443087240a$var$WritableStream, TransformStream: $8c2fb8443087240a$var$TransformStream, DOMException: $8c2fb8443087240a$var$DOMException, Blob: $8c2fb8443087240a$var$Blob } = (0, $f9c8S.default);\nconst { GONE: $8c2fb8443087240a$var$GONE } = (0, $jG9Jm.errors);\n// @ts-ignore - Don't match newer versions of Safari, but that's okay\nconst $8c2fb8443087240a$var$isOldSafari = /constructor/i.test(window.HTMLElement);\nclass $8c2fb8443087240a$export$8bdd21c705ef8d22 {\n    constructor(name = 'unkown'){\n        this.name = name;\n        this.kind = 'file';\n    }\n    async getFile() {\n        throw new $8c2fb8443087240a$var$DOMException(...$8c2fb8443087240a$var$GONE);\n    }\n    async isSameEntry(other) {\n        return this === other;\n    }\n    /**\n   * @param {object} [options={}]\n   */ async createWritable(options = {}) {\n        const sw = await navigator.serviceWorker?.getRegistration();\n        const link = document.createElement('a');\n        const ts = new $8c2fb8443087240a$var$TransformStream();\n        const sink = ts.writable;\n        link.download = this.name;\n        if ($8c2fb8443087240a$var$isOldSafari || !sw) {\n            /** @type {Blob[]} */ let chunks = [];\n            ts.readable.pipeTo(new $8c2fb8443087240a$var$WritableStream({\n                write (chunk) {\n                    chunks.push(new $8c2fb8443087240a$var$Blob([\n                        chunk\n                    ]));\n                },\n                close () {\n                    const blob = new $8c2fb8443087240a$var$Blob(chunks, {\n                        type: 'application/octet-stream; charset=utf-8'\n                    });\n                    chunks = [];\n                    link.href = URL.createObjectURL(blob);\n                    link.click();\n                    setTimeout(()=>URL.revokeObjectURL(link.href), 10000);\n                }\n            }));\n        } else {\n            const { writable: writable, readablePort: readablePort } = new $8c2fb8443087240a$var$RemoteWritableStream($8c2fb8443087240a$var$WritableStream);\n            // Make filename RFC5987 compatible\n            const fileName = encodeURIComponent(this.name).replace(/['()]/g, escape).replace(/\\*/g, '%2A');\n            const headers = {\n                'content-disposition': \"attachment; filename*=UTF-8''\" + fileName,\n                'content-type': 'application/octet-stream; charset=utf-8',\n                ...options.size ? {\n                    'content-length': options.size\n                } : {}\n            };\n            const keepAlive = setTimeout(()=>sw.active.postMessage(0), 10000);\n            ts.readable.pipeThrough(new $8c2fb8443087240a$var$TransformStream({\n                transform (chunk, ctrl) {\n                    if (chunk instanceof Uint8Array) return ctrl.enqueue(chunk);\n                    const reader = new Response(chunk).body.getReader();\n                    const pump = (_)=>reader.read().then((e)=>e.done ? 0 : pump(ctrl.enqueue(e.value)));\n                    return pump();\n                }\n            })).pipeTo(writable).finally(()=>{\n                clearInterval(keepAlive);\n            });\n            // Transfer the stream to service worker\n            sw.active.postMessage({\n                url: sw.scope + fileName,\n                headers: headers,\n                readablePort: readablePort\n            }, [\n                readablePort\n            ]);\n            // Trigger the download with a hidden iframe\n            const iframe = document.createElement('iframe');\n            iframe.hidden = true;\n            iframe.src = sw.scope + fileName;\n            document.body.appendChild(iframe);\n        }\n        return sink.getWriter();\n    }\n}\n// Want to remove this postMessage hack, tell them u want transferable streams:\n// https://bugs.webkit.org/show_bug.cgi?id=215485\nconst $8c2fb8443087240a$var$WRITE = 0;\nconst $8c2fb8443087240a$var$PULL = 0;\nconst $8c2fb8443087240a$var$ERROR = 1;\nconst $8c2fb8443087240a$var$ABORT = 1;\nconst $8c2fb8443087240a$var$CLOSE = 2;\nclass $8c2fb8443087240a$var$MessagePortSink {\n    /** @param {MessagePort} port */ constructor(port){\n        port.onmessage = (event)=>this._onMessage(event.data);\n        this._port = port;\n        this._resetReady();\n    }\n    start(controller) {\n        this._controller = controller;\n        // Apply initial backpressure\n        return this._readyPromise;\n    }\n    write(chunk) {\n        const message = {\n            type: $8c2fb8443087240a$var$WRITE,\n            chunk: chunk\n        };\n        // Send chunk\n        this._port.postMessage(message, [\n            chunk.buffer\n        ]);\n        // Assume backpressure after every write, until sender pulls\n        this._resetReady();\n        // Apply backpressure\n        return this._readyPromise;\n    }\n    close() {\n        this._port.postMessage({\n            type: $8c2fb8443087240a$var$CLOSE\n        });\n        this._port.close();\n    }\n    abort(reason) {\n        this._port.postMessage({\n            type: $8c2fb8443087240a$var$ABORT,\n            reason: reason\n        });\n        this._port.close();\n    }\n    _onMessage(message) {\n        if (message.type === $8c2fb8443087240a$var$PULL) this._resolveReady();\n        if (message.type === $8c2fb8443087240a$var$ERROR) this._onError(message.reason);\n    }\n    _onError(reason) {\n        this._controller.error(reason);\n        this._rejectReady(reason);\n        this._port.close();\n    }\n    _resetReady() {\n        this._readyPromise = new Promise((resolve, reject)=>{\n            this._readyResolve = resolve;\n            this._readyReject = reject;\n        });\n        this._readyPending = true;\n    }\n    _resolveReady() {\n        this._readyResolve();\n        this._readyPending = false;\n    }\n    _rejectReady(reason) {\n        if (!this._readyPending) this._resetReady();\n        this._readyPromise.catch(()=>{});\n        this._readyReject(reason);\n        this._readyPending = false;\n    }\n}\nclass $8c2fb8443087240a$var$RemoteWritableStream {\n    constructor(WritableStream){\n        const channel = new MessageChannel();\n        this.readablePort = channel.port1;\n        this.writable = new WritableStream(new $8c2fb8443087240a$var$MessagePortSink(channel.port2));\n    }\n}\n\n});\nparcelRegister(\"jG9Jm\", function(module, exports) {\n\n$parcel$export(module.exports, \"errors\", () => $e5397ce30315ba90$export$30f3b02011db23c0);\n$parcel$export(module.exports, \"config\", () => $e5397ce30315ba90$export$e506a1d27d1eaa20);\n$parcel$export(module.exports, \"fromDataTransfer\", () => $e5397ce30315ba90$export$34af8373a76882c2);\n$parcel$export(module.exports, \"getDirHandlesFromInput\", () => $e5397ce30315ba90$export$7d17e35d81e093f2);\n$parcel$export(module.exports, \"getFileHandlesFromInput\", () => $e5397ce30315ba90$export$45ac616e835cfe89);\nconst $e5397ce30315ba90$export$30f3b02011db23c0 = {\n    INVALID: [\n        'seeking position failed.',\n        'InvalidStateError'\n    ],\n    GONE: [\n        'A requested file or directory could not be found at the time an operation was processed.',\n        'NotFoundError'\n    ],\n    MISMATCH: [\n        'The path supplied exists, but was not an entry of requested type.',\n        'TypeMismatchError'\n    ],\n    MOD_ERR: [\n        'The object can not be modified in this way.',\n        'InvalidModificationError'\n    ],\n    SYNTAX: (m)=>[\n            `Failed to execute 'write' on 'UnderlyingSinkBase': Invalid params passed. ${m}`,\n            'SyntaxError'\n        ],\n    SECURITY: [\n        'It was determined that certain files are unsafe for access within a Web application, or that too many calls are being made on file resources.',\n        'SecurityError'\n    ],\n    DISALLOWED: [\n        'The request is not allowed by the user agent or the platform in the current context.',\n        'NotAllowedError'\n    ]\n};\nconst $e5397ce30315ba90$export$e506a1d27d1eaa20 = {\n    writable: globalThis.WritableStream\n};\n\n\n\nasync function $e5397ce30315ba90$export$34af8373a76882c2(entries) {\n    console.warn('deprecated fromDataTransfer - use `dt.items[0].getAsFileSystemHandle()` instead');\n    const [memory, sandbox, fs] = await Promise.all([\n        (parcelRequire(\"3Mufc\")),\n        (parcelRequire(\"dwrTj\")),\n        (parcelRequire(\"cvhlB\"))\n    ]);\n    const folder = new memory.FolderHandle('', false);\n    folder._entries = entries.map((entry)=>entry.isFile ? new sandbox.FileHandle(entry, false) : new sandbox.FolderHandle(entry, false));\n    return new fs.FileSystemDirectoryHandle(folder);\n}\n\n\nasync function $e5397ce30315ba90$export$7d17e35d81e093f2(input) {\n    const { FolderHandle: FolderHandle, FileHandle: FileHandle } = await (parcelRequire(\"3Mufc\"));\n    const { FileSystemDirectoryHandle: FileSystemDirectoryHandle } = await (parcelRequire(\"cvhlB\"));\n    const files = Array.from(input.files);\n    const rootName = files[0].webkitRelativePath.split('/', 1)[0];\n    const root = new FolderHandle(rootName, false);\n    files.forEach((file)=>{\n        const path = file.webkitRelativePath.split('/');\n        path.shift();\n        const name = path.pop();\n        const dir = path.reduce((dir, path)=>{\n            if (!dir._entries[path]) dir._entries[path] = new FolderHandle(path, false);\n            return dir._entries[path];\n        }, root);\n        dir._entries[name] = new FileHandle(file.name, file, false);\n    });\n    return new FileSystemDirectoryHandle(root);\n}\n\n\nasync function $e5397ce30315ba90$export$45ac616e835cfe89(input) {\n    const { FileHandle: FileHandle } = await (parcelRequire(\"3Mufc\"));\n    const { FileSystemFileHandle: FileSystemFileHandle } = await (parcelRequire(\"iWdfd\"));\n    return Array.from(input.files).map((file)=>new FileSystemFileHandle(new FileHandle(file.name, file, false)));\n}\n\n});\nparcelRegister(\"3Mufc\", function(module, exports) {\n\nvar $if9Ie = parcelRequire(\"if9Ie\");\nmodule.exports = $if9Ie(\"9AOUm\").then(()=>parcelRequire('40oxC'));\n\n});\n\nparcelRegister(\"dwrTj\", function(module, exports) {\n\nvar $if9Ie = parcelRequire(\"if9Ie\");\nmodule.exports = $if9Ie(\"acNkV\").then(()=>parcelRequire('k5tLT'));\n\n});\n\nparcelRegister(\"cvhlB\", function(module, exports) {\n\nvar $if9Ie = parcelRequire(\"if9Ie\");\nmodule.exports = $if9Ie(\"gLIJH\").then(()=>parcelRequire('2Fv9o'));\n\n});\n\nparcelRegister(\"iWdfd\", function(module, exports) {\n\nvar $if9Ie = parcelRequire(\"if9Ie\");\nmodule.exports = $if9Ie(\"6hwdd\").then(()=>parcelRequire('ggMY5'));\n\n});\n\n\nparcelRegister(\"f9c8S\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $b0711d7049896793$export$2e2bcd8739ae039);\nconst $b0711d7049896793$var$config = {\n    ReadableStream: globalThis.ReadableStream,\n    WritableStream: globalThis.WritableStream,\n    TransformStream: globalThis.TransformStream,\n    DOMException: globalThis.DOMException,\n    Blob: globalThis.Blob,\n    File: globalThis.File\n};\nvar $b0711d7049896793$export$2e2bcd8739ae039 = $b0711d7049896793$var$config;\n\n});\n\n\n\n//# sourceMappingURL=downloader.bac1d63a.js.map\n","import { errors } from '../util.js'\nimport config from '../config.js'\n\nconst {\n  WritableStream,\n  TransformStream,\n  DOMException,\n  Blob\n} = config\n\nconst { GONE } = errors\n// @ts-ignore - Don't match newer versions of Safari, but that's okay\nconst isOldSafari = /constructor/i.test(window.HTMLElement)\n\nexport class FileHandle {\n  constructor (name = 'unkown') {\n    this.name = name\n    this.kind = 'file'\n  }\n\n  async getFile () {\n    throw new DOMException(...GONE)\n  }\n\n  async isSameEntry(other) {\n    return this === other\n  }\n\n  /**\n   * @param {object} [options={}]\n   */\n  async createWritable (options = {}) {\n    const sw = await navigator.serviceWorker?.getRegistration()\n    const link = document.createElement('a')\n    const ts = new TransformStream()\n    const sink = ts.writable\n\n    link.download = this.name\n\n    if (isOldSafari || !sw) {\n      /** @type {Blob[]} */\n      let chunks = []\n      ts.readable.pipeTo(new WritableStream({\n        write (chunk) {\n          chunks.push(new Blob([chunk]))\n        },\n        close () {\n          const blob = new Blob(chunks, { type: 'application/octet-stream; charset=utf-8' })\n          chunks = []\n          link.href = URL.createObjectURL(blob)\n          link.click()\n          setTimeout(() => URL.revokeObjectURL(link.href), 10000)\n        }\n      }))\n    } else {\n      const { writable, readablePort } = new RemoteWritableStream(WritableStream)\n      // Make filename RFC5987 compatible\n      const fileName = encodeURIComponent(this.name).replace(/['()]/g, escape).replace(/\\*/g, '%2A')\n      const headers = {\n        'content-disposition': \"attachment; filename*=UTF-8''\" + fileName,\n        'content-type': 'application/octet-stream; charset=utf-8',\n        ...(options.size ? { 'content-length': options.size } : {})\n      }\n\n      const keepAlive = setTimeout(() => sw.active.postMessage(0), 10000)\n\n      ts.readable.pipeThrough(new TransformStream({\n        transform (chunk, ctrl) {\n          if (chunk instanceof Uint8Array) return ctrl.enqueue(chunk)\n          const reader = new Response(chunk).body.getReader()\n          const pump = _ => reader.read().then(e => e.done ? 0 : pump(ctrl.enqueue(e.value)))\n          return pump()\n        }\n      })).pipeTo(writable).finally(() => {\n        clearInterval(keepAlive)\n      })\n\n      // Transfer the stream to service worker\n      sw.active.postMessage({\n        url: sw.scope + fileName,\n        headers,\n        readablePort\n      }, [readablePort])\n\n      // Trigger the download with a hidden iframe\n      const iframe = document.createElement('iframe')\n      iframe.hidden = true\n      iframe.src = sw.scope + fileName\n      document.body.appendChild(iframe)\n    }\n\n    return sink.getWriter()\n  }\n}\n\n// Want to remove this postMessage hack, tell them u want transferable streams:\n// https://bugs.webkit.org/show_bug.cgi?id=215485\n\nconst WRITE = 0\nconst PULL = 0\nconst ERROR = 1\nconst ABORT = 1\nconst CLOSE = 2\n\nclass MessagePortSink {\n  /** @param {MessagePort} port */\n  constructor (port) {\n    port.onmessage = event => this._onMessage(event.data)\n    this._port = port\n    this._resetReady()\n  }\n\n  start (controller) {\n    this._controller = controller\n    // Apply initial backpressure\n    return this._readyPromise\n  }\n\n  write (chunk) {\n    const message = { type: WRITE, chunk }\n\n    // Send chunk\n    this._port.postMessage(message, [chunk.buffer])\n\n    // Assume backpressure after every write, until sender pulls\n    this._resetReady()\n\n    // Apply backpressure\n    return this._readyPromise\n  }\n\n  close () {\n    this._port.postMessage({ type: CLOSE })\n    this._port.close()\n  }\n\n  abort (reason) {\n    this._port.postMessage({ type: ABORT, reason })\n    this._port.close()\n  }\n\n  _onMessage (message) {\n    if (message.type === PULL) this._resolveReady()\n    if (message.type === ERROR) this._onError(message.reason)\n  }\n\n  _onError (reason) {\n    this._controller.error(reason)\n    this._rejectReady(reason)\n    this._port.close()\n  }\n\n  _resetReady () {\n    this._readyPromise = new Promise((resolve, reject) => {\n      this._readyResolve = resolve\n      this._readyReject = reject\n    })\n    this._readyPending = true\n  }\n\n  _resolveReady () {\n    this._readyResolve()\n    this._readyPending = false\n  }\n\n  _rejectReady (reason) {\n    if (!this._readyPending) this._resetReady()\n    this._readyPromise.catch(() => {})\n    this._readyReject(reason)\n    this._readyPending = false\n  }\n}\n\nclass RemoteWritableStream {\n  constructor (WritableStream) {\n    const channel = new MessageChannel()\n    this.readablePort = channel.port1\n    this.writable = new WritableStream(\n      new MessagePortSink(channel.port2)\n    )\n  }\n}\n","export const errors = {\n  INVALID: ['seeking position failed.', 'InvalidStateError'],\n  GONE: ['A requested file or directory could not be found at the time an operation was processed.', 'NotFoundError'],\n  MISMATCH: ['The path supplied exists, but was not an entry of requested type.', 'TypeMismatchError'],\n  MOD_ERR: ['The object can not be modified in this way.', 'InvalidModificationError'],\n  SYNTAX: m => [`Failed to execute 'write' on 'UnderlyingSinkBase': Invalid params passed. ${m}`, 'SyntaxError'],\n  SECURITY: ['It was determined that certain files are unsafe for access within a Web application, or that too many calls are being made on file resources.', 'SecurityError'],\n  DISALLOWED: ['The request is not allowed by the user agent or the platform in the current context.', 'NotAllowedError']\n}\n\nexport const config = {\n  writable: globalThis.WritableStream\n}\n\nexport async function fromDataTransfer (entries) {\n  console.warn('deprecated fromDataTransfer - use `dt.items[0].getAsFileSystemHandle()` instead')\n  const [memory, sandbox, fs] = await Promise.all([\n    import('./adapters/memory.js'),\n    import('./adapters/sandbox.js'),\n    import('./FileSystemDirectoryHandle.js')\n  ])\n\n  const folder = new memory.FolderHandle('', false)\n  folder._entries = entries.map(entry => entry.isFile\n    ? new sandbox.FileHandle(entry, false)\n    : new sandbox.FolderHandle(entry, false)\n  )\n\n  return new fs.FileSystemDirectoryHandle(folder)\n}\n\nexport async function getDirHandlesFromInput (input) {\n  const { FolderHandle, FileHandle } = await import('./adapters/memory.js')\n  const { FileSystemDirectoryHandle } = await import('./FileSystemDirectoryHandle.js')\n\n  const files = Array.from(input.files)\n  const rootName = files[0].webkitRelativePath.split('/', 1)[0]\n  const root = new FolderHandle(rootName, false)\n\n  files.forEach(file => {\n    const path = file.webkitRelativePath.split('/')\n    path.shift()\n    const name = path.pop()\n\n    const dir = path.reduce((dir, path) => {\n      if (!dir._entries[path]) dir._entries[path] = new FolderHandle(path, false)\n      return dir._entries[path]\n    }, root)\n\n    dir._entries[name] = new FileHandle(file.name, file, false)\n  })\n\n  return new FileSystemDirectoryHandle(root)\n}\n\nexport async function getFileHandlesFromInput (input) {\n  const { FileHandle } = await import('./adapters/memory.js')\n  const { FileSystemFileHandle } = await import('./FileSystemFileHandle.js')\n\n  return Array.from(input.files).map(file =>\n    new FileSystemFileHandle(new FileHandle(file.name, file, false))\n  )\n}\n","let load = require('./helpers/browser/esm-js-loader');\nmodule.exports = (load(\"9AOUm\")).then(() => parcelRequire('40oxC'));","let load = require('./helpers/browser/esm-js-loader');\nmodule.exports = (load(\"acNkV\")).then(() => parcelRequire('k5tLT'));","let load = require('./helpers/browser/esm-js-loader');\nmodule.exports = (load(\"gLIJH\")).then(() => parcelRequire('2Fv9o'));","let load = require('./helpers/browser/esm-js-loader');\nmodule.exports = (load(\"6hwdd\")).then(() => parcelRequire('ggMY5'));","const config = {\n  ReadableStream: globalThis.ReadableStream,\n  WritableStream: globalThis.WritableStream,\n  TransformStream: globalThis.TransformStream,\n  DOMException: globalThis.DOMException,\n  Blob: globalThis.Blob,\n  File: globalThis.File,\n}\n\nexport default config\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","$8c2fb8443087240a$export$8bdd21c705ef8d22","$jG9Jm","WritableStream","$8c2fb8443087240a$var$WritableStream","TransformStream","$8c2fb8443087240a$var$TransformStream","DOMException","$8c2fb8443087240a$var$DOMException","Blob","$8c2fb8443087240a$var$Blob","$f9c8S","default","GONE","$8c2fb8443087240a$var$GONE","errors","$8c2fb8443087240a$var$isOldSafari","test","window","HTMLElement","constructor","name","kind","getFile","isSameEntry","other","createWritable","options","sw","navigator","serviceWorker","getRegistration","link","document","createElement","ts","sink","writable","download","chunks","readable","pipeTo","write","chunk","push","close","blob","type","href","URL","createObjectURL","click","setTimeout","revokeObjectURL","readablePort","$8c2fb8443087240a$var$RemoteWritableStream","fileName","encodeURIComponent","replace","escape","headers","size","keepAlive","active","postMessage","pipeThrough","transform","ctrl","Uint8Array","enqueue","reader","Response","body","getReader","pump","_","read","then","done","value","finally","clearInterval","url","scope","iframe","hidden","src","appendChild","getWriter","$8c2fb8443087240a$var$MessagePortSink","port","onmessage","event","_onMessage","data","_port","_resetReady","start","controller","_controller","_readyPromise","buffer","abort","reason","message","_resolveReady","_onError","error","_rejectReady","Promise","resolve","reject","_readyResolve","_readyReject","_readyPending","catch","channel","MessageChannel","port1","port2","$e5397ce30315ba90$export$30f3b02011db23c0","$e5397ce30315ba90$export$e506a1d27d1eaa20","$e5397ce30315ba90$export$34af8373a76882c2","$e5397ce30315ba90$export$7d17e35d81e093f2","$e5397ce30315ba90$export$45ac616e835cfe89","INVALID","MISMATCH","MOD_ERR","SYNTAX","m","SECURITY","DISALLOWED","entries","console","warn","memory","sandbox","fs","all","folder","FolderHandle","_entries","map","entry","isFile","FileHandle","FileSystemDirectoryHandle","input","files","Array","from","root","webkitRelativePath","split","forEach","file","path","shift","pop","dir","reduce","FileSystemFileHandle","$if9Ie","$b0711d7049896793$export$2e2bcd8739ae039","ReadableStream","File"],"version":3,"file":"downloader.bac1d63a.js.map"}